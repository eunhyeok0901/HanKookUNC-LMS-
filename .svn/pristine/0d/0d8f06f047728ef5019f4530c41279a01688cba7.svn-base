<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<style type="text/css">
#fileDragArea:active {
	background: #eee;
}
</style>
<h4 class="card-title">
	<i class="fa-solid fa-graduation-cap"></i>커뮤니티
</h4>

<div class="bootstrap-modal">
	<!-- Button trigger modal -->
	<button type="button" class="btn mb-1 btn-dark" data-toggle="modal"
		data-target="#basicModal">글쓰기</button>
	<!-- Modal -->
	<div class="modal fade" id="basicModal" style="display: none;"
		aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">새로운 게시글 작성하기</h5>
					<button type="button" class="close" data-dismiss="modal">
						<span>×</span>
					</button>
				</div>
				<!-- 커뮤니티 등록 폼 시작 -->
				<div class="form-validation">
					<form class="form-valide" action="#" method="post"
						id="cmntRegisterForm" novalidate="novalidate">
						<div class="modal-body">
							<input type="hidden" name="smem_no" id="smem_no"
								value="${smem_no }">
							<div class="form-group row">
								<div class="col-lg-12" style="display: flex;">
									<select class="form-control" id="cmnt_category"
										name="cmnt_category" required>
										<option value="" disabled="disabled" selected="selected">말머리
											선택</option>
										<option value="토론">토론</option>
										<option value="정보">정보</option>
										<option value="마켓">마켓</option>
										<option value="잡담">잡담</option>
										<option value="기타">기타</option>
									</select> <select class="form-control" id="cmnt_feeling"
										name="cmnt_feeling" required="required">
										<option value="" disabled="disabled" selected="selected">느낌
											선택</option>
										<option value="기쁨">기쁨</option>
										<option value="분노">분노</option>
										<option value="슬픔">슬픔</option>
										<option value="즐거움">즐거움</option>
										<option value="사랑">사랑</option>
										<option value="희망">희망</option>
									</select>
								</div>
							</div>

							<div class="form-group">
								<div class="form-check form-check-inline">
									<label class="form-check-label"> <input type="checkbox"
										class="form-check-input" value="1" name="cmnt_anony"
										id="cmnt_anony"> <font
										style="vertical-align: inherit;"> <font
											style="vertical-align: inherit;">익명으로 작성</font>
									</font>
									</label>
								</div>
							</div>

							<div class="form-group">
								<input type="text" class="form-control input-flat"
									placeholder="제목을 입력하세요" name="cmnt_title" id="cmnt_title"
									style="border-left: none; border-right: none; border-top: none;"
									required="required">
							</div>

							<div class="form-group">
								<textarea class="form-control h-150px" rows="6"
									name="cmnt_content" id="cmnt_content" style="height: 114px;"
									placeholder="내용을 입력하세요" required="required"></textarea>
							</div>

							<div class="form-group">
								<input type="file" id="cmntFiles" name="cmntFiles"
									multiple="multiple" accept=".jpg,.gif,.png">
								<code>*이미지 파일만 가능</code>
							</div>

							<div class="alert alert-success" id="fileDragArea"
								style="height: 100px; text-align: center; align-items: center;">
								<font style="vertical-align: inherit;">사진 파일을 이곳으로 끌어오세요</font>
							</div>
							<div id="fileShowArea"
								style="display: grid; grid-template-columns: repeat(3, 1fr); overflow: scroll; overflow-x: hidden; overflow-y: hidden;"></div>
						</div>
						<div class="modal-footer">
							<div class="form-group row">
								<div class="col-lg-12 ml-auto"
									style="display: flex; justify-content: space-between;">
									<button type="button" class="btn btn-danger"
										data-dismiss="modal">취소</button>
									<button type="submit" class="btn btn-success">등록</button>
								</div>
							</div>
						</div>
					</form>
				</div>
				<!-- 커뮤니티 등록 폼 종료 -->
			</div>
		</div>
	</div>
</div>



<div class="row">
	<!-- 상단 메뉴 시작 -->
	<div class="col-lg-4 col-sm-4">
		<div class="card">
			<div class="social-graph-wrapper widget-googleplus">
				<span class="s-icon"><i
					class="fa-regular fa-face-grin-squint-tears"> POPULAR POSTS</i></span>
			</div>
			<div class="row">
				<div class="col-6 border-right">
					<div class="pt-3 pb-3 pl-0 pr-0 text-center">
						<h4 class="m-1">
							<i class="fa-sharp fa-solid fa-mask"></i>
						</h4>
						<p class="m-0">
							<font style="vertical-align: inherit;"><font
								style="vertical-align: inherit;">익명게시판 인기글 보기</font></font>
						</p>
					</div>
				</div>
				<div class="col-6">
					<div class="pt-3 pb-3 pl-0 pr-0 text-center">
						<h4 class="m-1">
							<i class="fa-solid fa-user-check"></i>
						</h4>
						<p class="m-0">
							<font style="vertical-align: inherit;"><font
								style="vertical-align: inherit;">실명게시판 인기글 보기</font></font>
						</p>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col-lg-4 col-sm-4">
		<div class="card">
			<div class="social-graph-wrapper widget-linkedin">
				<span class="s-icon" style="display: inline-block;"> <i
					class="fa-solid fa-comments"> Talk that Talk</i>
				</span>
			</div>
			<div class="row">
				<div class="col-6 border-right">
					<div class="pt-3 pb-3 pl-0 pr-0 text-center">
						<h4 class="m-1">
							<i class="fa-sharp fa-solid fa-mask"></i>
						</h4>
						<p class="m-0">
							<font style="vertical-align: inherit;"><font
								style="vertical-align: inherit;">익명게시판 입장</font></font>
						</p>
					</div>
				</div>
				<div class="col-6">
					<div class="pt-3 pb-3 pl-0 pr-0 text-center">
						<h4 class="m-1">
							<i class="fa-solid fa-user-check"></i>
						</h4>
						<p class="m-0">
							<font style="vertical-align: inherit;"><font
								style="vertical-align: inherit;">실명게시판 입장</font></font>
						</p>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col-lg-4 col-sm-4">
		<div class="card">
			<div class="social-graph-wrapper widget-twitter">
				<span class="s-icon"><i class="fa-solid fa-circle-info">
						MY INFO</i></span>
			</div>
			<div class="row">
				<div class="col-6 border-right">
					<div class="pt-3 pb-3 pl-0 pr-0 text-center">
						<h4 class="m-1">
							<i class="fa-solid fa-clipboard"></i>
						</h4>
						<p class="m-0">
							<font style="vertical-align: inherit;"><font
								style="vertical-align: inherit;">내가 쓴 글 보기</font></font>
						</p>
					</div>
				</div>
				<div class="col-6">
					<div class="pt-3 pb-3 pl-0 pr-0 text-center">
						<h4 class="m-1">
							<i class="fa-solid fa-comment-dots"></i>
						</h4>
						<p class="m-0">
							<font style="vertical-align: inherit;"><font
								style="vertical-align: inherit;">내가 쓴 댓글 보기</font></font>
						</p>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- 상단 메뉴 종료 -->
</div>
<div class="row" id="cmntListDiv">
	<div class="col-md-6 col-lg-3">
		<div class="card">
			<div class="card-header bg-white">
				<h5 class="card-title">카드 제목</h5>
				<h6 class="card-subtitle mb-2 text-muted">
					<i class="fa-regular fa-heart"></i> 0 <i
						class="fa-regular fa-comment"></i> 0
				</h6>
			</div>
			<img class="img-fluid"
				src="${pageContext.request.contextPath }/resources/images/망그곰1.png"
				alt="">
			<div class="card-body">
				<p class="card-text">카드 내용</p>
			</div>
			<div class="card-footer">
				<p class="card-text d-inline">
					<small class="text-muted">1분 전</small>
				</p>
				<a href="#" class="card-link float-right"><small>상세 보기</small></a>
			</div>
		</div>
	</div>
</div>
<div></div>
<script type="text/javascript">
//아작스 통신을 위한 csrf 인증 토큰
let header = '${_csrf.headerName}';
let token = '${_csrf.token}';

// 무한스크롤을 통해 리스트를 불러올 div
const cmntListDiv = document.querySelector("#cmntListDiv");
//스크롤 항상 위에 올려 놓기
window.onload = () =>{
  setTimeout(()=>{
    window.scrollTo(0,0);
  }, 30);
} 

// window의 dragover, drop 시의 빌트인 기능을 막음
const builtInBlock = () => { event.preventDefault(); }
window.addEventListener("dragover", builtInBlock);
window.addEventListener("drop", builtInBlock);

// 파일을 드래그할 div, 드래그한 파일을 보여줄 div
const fileDragArea = document.querySelector("#fileDragArea");
const fileShowArea = document.querySelector("#fileShowArea");
// 파일
const cmntFiles = document.querySelector("#cmntFiles");

// 파일을 모으는 배열
const cmntFileArray = [];

// 커뮤니티 새글 등록 폼
const cmntRegisterForm = document.querySelector("#cmntRegisterForm");

// 폼 전송 시
cmntRegisterForm.addEventListener("submit", function(event){
	event.preventDefault();
	let files = cmntFiles.files;
	console.log(files);
	
	var formData = new FormData(cmntRegisterForm);
	
	
	for(let i = 0; i < files.length; i++){
		formData.append("files", files[i]); // 같은 이름으로 append하면 배열이 된다.
	};
	
	console.log("cmntFileArray 출력");
	console.log(cmntFileArray);
	console.log(cmntFileArray[0].files);
	formData.append("files", cmntFileArray);
	
	for(let i = 0; i < cmntFileArray.length; i++){
		formData.append("files", cmntFileArray[i]); // 같은 이름으로 append하면 배열이 된다.
	};
	

	let xhr = new XMLHttpRequest();
	xhr.open("post", "/community/register", true);
	xhr.setRequestHeader(header, token);
	xhr.onreadystatechange = () => {
		if(xhr.readyState == 4 && xhr.status == 200){
			console.log(xhr.responseText);
			alert("성공적으로 등록되었습니다.");
		}
	}
	xhr.send(formData);
})

// fileDragArea에 dragover 시 빌트인 기능을 막음
fileDragArea.addEventListener("dragover", ()=>{
  event.preventDefault();
});

// 파일 추가 혹은 파일 드래그시 그 겉을 둘러싸는 박스를 만드는 함수
function dramImgBox(){
	let iDiv = document.createElement("div");
	iDiv.setAttribute("class", "alert alert-primary alert-dismissible fade show");
	iDiv.setAttribute("style", "display:inline-block;");

	let iBtn = document.createElement("button");
	iBtn.setAttribute("type", "button");
	iBtn.setAttribute("class", "class");
	iBtn.setAttribute("class", "close");
	iBtn.setAttribute("data-dismiss", "alert");
	iBtn.setAttribute("aria-label", "close");

	let iSpan = document.createElement("span");
	iSpan.textContent = "x";
	iSpan.setAttribute("class", "closeSpan");
	
	iBtn.appendChild(iSpan);
	iDiv.appendChild(iBtn);
	fileShowArea.appendChild(iDiv);
	return iDiv;
}

// 파일 드래그 칸에 drop 시 이미지와 이미지정보를 화면에 출력
fileDragArea.addEventListener("drop", ()=>{
  event.preventDefault();
  let dragFiles = event.dataTransfer.files;
  console.log(dragFiles);
  for(let i = 0; i < dragFiles.length; i++){
    let fileReader = new FileReader();
    fileReader.readAsDataURL(dragFiles[i]); // 바이너리 파일을 읽어들임
    fileReader.onload = () =>{
    
		let iDiv = dramImgBox();
		
		let myImg = document.createElement("img");
		myImg.src = fileReader.result;
		console.log(fileReader.result);
		myImg.width = 80;
		myImg.height = 80;
 		iDiv.appendChild(myImg);
		
		let uuid = self.crypto.randomUUID();

		let myImgInfo = document.createElement("p");
		myImgInfo.textContent = dragFiles[i].name;
		myImgInfo.value = uuid + dragFiles[i].name;
		iDiv.appendChild(myImgInfo);
 		
		console.log(decodeURI(fileReader.result));
		console.log(dragFiles[i].name);
		console.log(dragFiles[i].size);
		console.log(dragFiles[i].type);

		
		cmntFileArray.push(base64toFile(fileReader.result, uuid + "?" + dragFiles[i].name));
    }
  }
});

// 파일 타입에서 파일을 추가할 경우 이미지와 이미지정보를 화면에 출력
cmntFiles.addEventListener("change", function(){
	console.log(cmntFiles.files);
	
	for(let i = 0; i < cmntFiles.files.length; i++){
		let fileReader = new FileReader();
		fileReader.readAsDataURL(cmntFiles.files[i]);
		fileReader.onload = () =>{

			let iDiv = dramImgBox();
			let myImg = document.createElement("img");
			myImg.src = fileReader.result;
			console.log(fileReader.result);
			myImg.width = 80;
			myImg.height = 80;
			iDiv.appendChild(myImg);

			let uuid = self.crypto.randomUUID();			
			
			let myImgInfo = document.createElement("p");
			myImgInfo.textContent = cmntFiles.files[i].name;
			myImgInfo.value = uuid + cmntFiles.files[i].name;
			iDiv.appendChild(myImgInfo);
			
			cmntFileArray.push(base64toFile(fileReader.result, uuid + "?" + cmntFiles.files[i].name));
		}
	}
})

// base64를 파일데이터로 변환
function base64toFile(base64_data, fileName) {
	let arr = base64_data.split(','),
	mime = arr[0].match(/:(.*?);/)[1],
	bstr = atob(arr[1]),
	n = bstr.length,
	u8arr = new Uint8Array(n);

	while(n--){
			u8arr[n] = bstr.charCodeAt(n);
	}
	return new File([u8arr], fileName, {type:mime});
}	

// 무한 스크롤
const appendData = function(){
	let str = "";
	for(let i = 0; i <= 20; i++){
		str += `<h1>\${i}번째 데이터</h1>`;
	}
  cmntListDiv.innerHTML += str;
}
/*
window.addEventListener("scroll", () =>{
	let scrollTop = document.documentElement.scrollTop; // 내가 지나친 높이
	let clientHeight = document.documentElement.clientHeight; // 내가 보는 높이
	let scrollHeight = document.documentElement.scrollHeight; // 문서 전체 높이

	let tuning = 50;

	if((scrollTop + clientHeight) >= (scrollHeight-tuning)){
		console.log("나야");
		appendData();
		console.log("나 실행할게");
	}
});
*/
</script>