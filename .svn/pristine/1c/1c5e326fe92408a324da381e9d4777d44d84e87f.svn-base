package org.hdcd.controller.common.board;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.hdcd.service.common.board.BoardService;
import org.hdcd.vo.BoardVO;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/board")
public class BoardController {
	
	@Autowired
	BoardService service;
	
	@RequestMapping(value = "/main", method = RequestMethod.GET)
	public String main() {
		log.debug("▶main");
		return "main/university";
	}
	@RequestMapping(value = "/commain", method = RequestMethod.GET)
	public String commain(String dep_code, Model model) throws Exception {
		log.info("dep_code는 스트링" + dep_code);
		log.debug("▶main");
//		 List<BoardVO> allinfomap = service.Allinfo(dep_code);
		 List<Map<String,Object>> allinfomap = service.Allinfo(dep_code);
		 
		 log.info("@32323232323 {}", allinfomap);
		  model.addAttribute("allinfomap",allinfomap);
		  model.addAttribute("dep_code",dep_code);
		return "main/boardList";
	}
	@ResponseBody
	@PostMapping(value = "/boardAllList", produces = "application/json;charset=utf-8")
	public List<BoardVO> boardList(String dep_code,Model model) throws Exception{
		log.info("뎁코드는 {}",dep_code);
		List<BoardVO> getList = service.selectAllList(dep_code);
		log.info("as123zx42{}", dep_code);
		log.info("▶BoardList");
		log.info("boardVo의 toString: {}", getList);
		
		return getList;
	}
	  
	  @PostMapping(value = "/boardRegister", produces = "text/plain;charset=UTF-8")
	  @ResponseBody
		public String boardRegister(HttpServletRequest req, BoardVO boardvo, List<MultipartFile> c_file)throws Exception{
			log.debug("boardvo : {} ",boardvo);
			String userId = (String) req.getSession().getAttribute("userId");
			log.info("sessionId" + userId);
			boardvo.setPmem_no(userId);
			log.info("이것은" + c_file.size());
			int insert = service.insertBoard(boardvo, c_file, req);
			return "등록이 완료되었습니다.";
		}
	
	  @GetMapping(value="/getBoard", produces = "application/json;charset=UTF-8")
		@ResponseBody
		public Map<String, BoardVO> getBoard(@RequestParam int no) throws Exception {
			log.info("### 수정 폼을 들어갈때 no를 전달합니다. : " + no);
			BoardVO boardVO = service.getBoard(no);
			Map<String, BoardVO> boardMap = new HashMap<String, BoardVO>();
			boardMap.put("boardMap", boardVO);
			return boardMap;
		}
	  @GetMapping(value = "/detail")
		public String getBoardDetail(HttpServletRequest request, int no, Model model) throws Exception {
			log.info(">>>>>> getBoardDetail");
			log.info("--------->" + no);
			
			  String userId = (String) request.getSession().getAttribute("userId");
			  log.debug("내 아이디는 " + userId);
			  
			  Map<String, Object> boardMap = service.BoardView(no);
			  log.info("boardVO.toString() : {}", boardMap);
			  model.addAttribute("BoardeMap", boardMap); 
			  model.addAttribute("userId",userId);
			  log.info("뭐라는겨 {} ",boardMap);
			return "main/comdetail";	
		}
	  
	  @PostMapping(value = "/modiboard", produces = "text/plain;charset=UTF-8")
	  @ResponseBody 
	  public String boardModify(HttpServletRequest req, BoardVO vo, List<MultipartFile> c_file) throws Exception { 
	  log.info("####### 수정하기 위해서 받은 VO 값 : " + vo.toString());
	  String userId = (String) req.getSession().getAttribute("userId");	
	  vo.setPmem_no(userId);
	  log.info("-->" + c_file.size());
	  int insert = service.modifyBoard(vo, c_file, req);
	  log.info("" + vo);
	  log.info(" " + insert);
	  log.info(""+ c_file);
	  return "SUCCESS";
	  }
	  @GetMapping(value = "/deleteboard", produces = "text/plain;charset=UTF-8")
	  @ResponseBody
	  public String deleteBoard(int board_no,HttpServletRequest req)throws Exception{
		  String userId = (String) req.getSession().getAttribute("userId");	
		  
		  log.info(userId);
		  log.info("-->저런"+board_no);
		  service.deleteBoard(board_no);
		  
		  return "성공";
	  }
	  
		/*
		 * @GetMapping(value = "/allinfo") public List<BoardVO>
		 * allinfo(HttpServletRequest req, String dep_code, Model model)throws
		 * Exception{ String userId = (String) req.getSession().getAttribute("userId");
		 * log.info(userId); model.addAttribute(dep_code); log.info(dep_code);
		 * List<BoardVO> allinfomap = service.Allinfo(dep_code);
		 * model.addAttribute("allinfomap",allinfomap); log.info("부대차렷" + allinfomap);
		 * return allinfomap;
		 * 
		 * }
		 */
	  
}
