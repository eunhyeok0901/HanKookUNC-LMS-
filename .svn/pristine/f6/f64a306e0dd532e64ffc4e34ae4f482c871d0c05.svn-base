<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hdcd.mapper.SScholarMapper">
	<!-- 대문자를 소문자로 변환 ctrl+shift+y-->
	
	<!-- ▶[학생] 장학금 종류 전체 리스트 select -->
	<select id="getScholarList" resultType="ScholarListVO">
		select schl_code, schl_name, schl_price from scholar_list
	</select>
	
	<select id="getScholarApplyList" parameterType="string" resultType="ScholarApplyVO">
		select a.scha_no,
	       a.scha_date,
	       a.scha_state,
	       a.scha_reject,
	       b.schl_code,
	       b.schl_name,
	       b.schl_price
		from scholar_apply a inner join scholar_list b
			 on a.schl_code = b.schl_code
		where a.smem_no = #{userId}
	</select>
	
	<!-- ▶[학생] 장학금 신청폼 insert -->
	<insert id="insertScholarApply" parameterType="ScholarApplyVO" useGeneratedKeys="true">
		insert into scholar_apply(scha_no, smem_no, schl_code, scha_date, scha_state)
		values ('scha'||seq_scha_no.nextval, #{smem_no} , #{schl_code} , sysdate, 0)
		<selectKey keyProperty="scha_no" keyColumn="scha_no" resultType="string" order="AFTER">
			select 'scha'||seq_scha_no.currval from dual
		</selectKey>
	</insert>
	
	<!-- ▶[학생] 장학금 신청폼 insert가 성공할 경우, 폼에 딸린 장학증빙서류도 insert -->
	<insert id="insertScholarApplyFile" parameterType="ScholarFileVO">
		insert into scholar_file(schfile_code, file_name, file_size, file_originnm, file_path, scha_no, file_type)
		values('schfile'||seq_schfilecode.nextval, #{file_name}, #{file_size}, #{file_originnm}, #{file_path}, #{scha_no}, #{file_type})
	</insert>
	
</mapper>