package org.hdcd.service.student.community;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.UUID;

import javax.inject.Inject;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;

import org.hdcd.mapper.CommunityMapper;
import org.hdcd.vo.CommunityFileVO;
import org.hdcd.vo.CommunityVO;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class CommunityServiceImpl implements ICommunityService{

	@Inject
	CommunityMapper mapper;
	
	@Override
	public int registerCmntPost(HttpServletRequest request, CommunityVO communityVO, List<MultipartFile> cmntfiles) throws IllegalStateException, IOException {
		// userId 및 제목 세팅
		String userId = (String) request.getSession().getAttribute("userId");
		communityVO.setSmem_no(userId);
		String cmnt_category = communityVO.getCmnt_category();
		String cmnt_feeling = communityVO.getCmnt_feeling();
		String cmnt_title = communityVO.getCmnt_title();
		communityVO.setCmnt_title(cmnt_category + "/" + cmnt_feeling + "/" + cmnt_title);
		
		// 커뮤니티 게시글 등록 후, selectKey로 게시글 번호를 가져온다.
		int cnt = mapper.registerCmntPost(communityVO);
		System.out.println("나의 넘버는" + communityVO.getCmnt_no()); //13, 앞에 cmnt 붙여줘야 함.
		String cmnt_no = "cmnt" + communityVO.getCmnt_no();

		log.debug("화긴:" + cmntfiles.size());
		
		// 게시글 등록에 성공했을 경우, 첨부파일도 추가 등록한다.
		if(cnt > 0 || cmntfiles.size() != 0 ) {
			
			ServletContext sc = request.getSession().getServletContext();
			String realPath = sc.getRealPath("/resources/uploads"); // 이클립스 가상 주소
			
			for (MultipartFile file : cmntfiles) {
				if(file.getOriginalFilename() != null) {					
					UUID uuid = UUID.randomUUID();
					long file_size = file.getSize();				
					// file_name, file_originnm, file_size, file_path, file_type
					String file_name = uuid + file.getOriginalFilename();
					String file_originnm = file.getOriginalFilename();
					String file_path = sc + "/resources/uploads/" + file_name;
					String file_type = file.getContentType();
					
					log.debug("fileName:" + file_originnm);
					
					CommunityFileVO cmntfile = new CommunityFileVO(cmnt_no, file_name, file_originnm, file_size, file_path, file_type);
					
					cnt = mapper.registerCmntPostFile(cmntfile);
					
					// 첨부파일 정보가 db에 등록된 경우, 파일을 transfer
					file.transferTo(new File(realPath + "/" + file_name));				
				}
			}
		}
		return cnt;
	}

	@Override
	public List<CommunityVO> getCmntTotalList() {
		return mapper.getCmntTotalList();
	}

	@Override
	public CommunityVO getCmntDetail(String cmnt_no) {
		return mapper.getCmntDetail(cmnt_no);
	}

}
