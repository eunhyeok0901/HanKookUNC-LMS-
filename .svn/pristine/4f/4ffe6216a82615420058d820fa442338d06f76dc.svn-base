package org.hdcd.controller.manager.enroll_member;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.hdcd.service.manager.enroll.EnrollUserService;
import org.hdcd.vo.DepartmentVO;
import org.hdcd.vo.MemberVO;
import org.hdcd.vo.StudentVO;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

@Controller
@RequestMapping("/enroll")
public class EnrollMemberController {

	@Inject
	EnrollUserService service;
	
	@RequestMapping(value = "/register", method = RequestMethod.GET)
	public String enrollMain() {
		return "enroll/registerForm";
	}
	
	
	//엑셀 업로드
	@ResponseBody
	@RequestMapping(value = "/upload", method = RequestMethod.POST, produces = "application/json; charset=utf-8")
	public ResponseEntity<List<Map<String, Object>>> uploadExcel(MultipartFile excel, Model model) throws IOException {
		
		
		   Map<String, Object> dataMap = null;
		   List<Map<String, Object>> list = new ArrayList<Map<String, Object>>();
		      try {
		            
		    	    XSSFWorkbook workBook = new XSSFWorkbook(excel.getInputStream());
		            // 첫번째 시트 불러오기
		            XSSFSheet sheet = workBook.getSheetAt(0);
		            
		            for(int i=1; i<sheet.getLastRowNum() + 1; i++) {
		            	dataMap = new HashMap<String, Object>();
		                XSSFRow row = sheet.getRow(i);
		                
		                // 행이 존재하기 않으면 패스
		                if(null == row) {
		                    continue;
		                }
		                
		                //12개 행
		                XSSFCell cell = row.getCell(0);
		                // 행의 1번째 열(순번) 
		                if(null != cell) 
		                	dataMap.put("mem_no", (int)cell.getNumericCellValue());
		                
		                // 행의 2번째 열(회원명)
		                cell = row.getCell(1);
		                if(null != cell) 
		                	dataMap.put("mem_name", cell.getStringCellValue());
		                
		                // 행의 3번째 열(성별)
		                cell = row.getCell(2);
		                if(null != cell) 
		                	dataMap.put("mem_sex", cell.getStringCellValue());
		                
		                // 행의 4번째 열(단과대학명)
		                cell = row.getCell(3);
		                if(null != cell) 
		                	dataMap.put("col_name", cell.getStringCellValue());
		                	
		                // 행의 5번째 열(학과명)
		                cell = row.getCell(4);
		                if(null != cell) 
		                	dataMap.put("dep_name", cell.getStringCellValue());
		                
		                // 행의 6번째 열(입학일자)
		                cell = row.getCell(5);
		                if(null != cell) 
		                	dataMap.put("stu_joinyear", cell.getStringCellValue());
		                
		                // 행의 7번째 열(연락처)
		                cell = row.getCell(6);
		                if(null != cell) 
		                	dataMap.put("mem_tel", cell.getStringCellValue());
		                
		                // 행의 8번째 열(주민번호 앞)
		                cell = row.getCell(7);
		                if(null != cell) 
		                	dataMap.put("mem_reg1", String.valueOf((int)cell.getNumericCellValue()));
		                
		                // 행의 9번째 열(주민번호 뒤)
		                cell = row.getCell(8);
		                if(null != cell) 
		                	dataMap.put("mem_reg2", String.valueOf((int)cell.getNumericCellValue()));
		                
		                // 행의 10번째 열(이메일)
		                cell = row.getCell(9);
		                if(null != cell) 
		                	dataMap.put("mem_email", cell.getStringCellValue());
		                
		                // 행의 11번째 열(주소)
		                cell = row.getCell(10);
		                if(null != cell) 
		                	dataMap.put("mem_addr1", cell.getStringCellValue());
		                
		                // 행의 12번째 열(상세주소)
		                cell = row.getCell(11);
		                if(null != cell) 
		                	dataMap.put("mem_addr2", cell.getStringCellValue());
		                
		                // 행의 13번째 열(학과코드)
		                cell = row.getCell(12);
		                if(null != cell) 
		                	dataMap.put("dep_code", cell.getStringCellValue());

		                
		                list.add(dataMap);

		            }
		        } catch (Exception e) {
		            e.printStackTrace();
		        }
		      
		ResponseEntity<List<Map<String, Object>>> entity = new ResponseEntity<List<Map<String, Object>>>(list, HttpStatus.OK);
		return entity;
	}
	
	
	@ResponseBody
	@RequestMapping(value = "/enrollReg", method = RequestMethod.POST, produces = "application/json; charset=utf-8")
	public ResponseEntity<String> enrollReg(MemberVO memberVO, StudentVO studentVO) {
		
		
		// 학과 코드 가져오기
		DepartmentVO departmentVO = service.selectOne(studentVO.getDep_code());
		
		// 회원번호
		memberVO.setMem_no(studentVO.getSmem_no());
		memberVO.setMem_pass(memberVO.getMem_reg2());
		
		// 학생정보 업로드
		studentVO.setStu_ccl(departmentVO.getDep_ccl());
		studentVO.setStu_cnl(departmentVO.getDep_cnl());
		studentVO.setStu_dep(departmentVO.getDep_name());
		studentVO.setStu_joinyear(20230302);
		studentVO.setStu_mcl(departmentVO.getDep_mcl());
		studentVO.setStu_mnl(departmentVO.getDep_mnl());
		studentVO.setStu_record("재학");
		studentVO.setStu_schyear(1);
		
		Map<String, Object> dataMap = new HashMap<String, Object>();
		dataMap.put("MemberVO", memberVO);
		dataMap.put("StudentVO", studentVO);

		// 회원정보, 학생정보 입력
		int result = service.insertMem(dataMap);
		
		ResponseEntity<String> entity = new ResponseEntity<String>("success", HttpStatus.OK);
		return entity;
	}
	
	
	
	
	
	
}


