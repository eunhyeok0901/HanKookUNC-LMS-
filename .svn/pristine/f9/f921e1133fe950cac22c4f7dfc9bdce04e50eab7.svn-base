package org.hdcd.controller.common.handler;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.springframework.web.socket.CloseStatus;
import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;
import org.springframework.web.socket.handler.TextWebSocketHandler;

import lombok.extern.slf4j.Slf4j;

@Slf4j
public class MainChatHandler extends TextWebSocketHandler{

	   // 접속한 세션 담을 리스트
	   private static Map<String ,WebSocketSession> map = new HashMap<String, WebSocketSession>();
	   
	   @Override
	   public void afterConnectionEstablished(WebSocketSession session) throws Exception {
	      log.info("접속");
	   }

	   //세션이 누구껀지 알아야함
	   
	   @Override
	   protected void handleTextMessage(WebSocketSession session, TextMessage message) throws Exception {
		   // 세션추가
		   String jsonData = message.getPayload();
		   JSONParser parser = new JSONParser();
		   JSONObject jsonObject = (JSONObject)parser.parse(jsonData); 
		   
		   String state = (String)jsonObject.get("state");
		   
		   switch(state) {
		   // 입장
		   case "0":
			   if(map.size() > 0) {
				   for(String key : map.keySet()){
					   if(key.equals((String)jsonObject.get("userId"))) {
						   map.put(key, session);
					   }else {
						   map.put((String)jsonObject.get("userId"), session);
					   }
				   }
				   
				   for(String key : map.keySet()) {
					   if(!key.equals((String)jsonObject.get("userId"))) {
						   map.get(key).sendMessage(message);
					   }
				   }
			   }else {
				   map.put((String)jsonObject.get("userId"), session);
			   }
			   
			   log.info("map {} ", map);
			   break;
		   case "1":
			   String purpose = (String)jsonObject.get("purpose");
			   // 친구요청임
			   if("0".equals(purpose)) {
				   String friendName = (String)jsonObject.get("userId");
				   
				   for(String key : map.keySet()){
					   if(key.equals(friendName)) {
						   log.info(key);
						   map.get(key).sendMessage(message);
					   }
				   }
			   }
			   break;
		   case "2":
			   map.remove((String)jsonObject.get("userId"));
			   for(String key : map.keySet()) {
				   if(!key.equals((String)jsonObject.get("userId"))) {
					   map.get(key).sendMessage(message);
				   }
			   }
			   log.info("map {} ", map);
			   break;
		   }
	      
		   log.info("map {}", map);
	   }
	   
	   @Override
	   public void afterConnectionClosed(WebSocketSession session, CloseStatus status) throws Exception {
	      log.info("떠남");
	   }
	
	
}
