<%@ page language="java" contentType="text/html; charset=UTF-8"
   pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec" %>

<c:if test="${not empty dataList}">
   <c:set value="${dataList }" var="List"></c:set>
</c:if>
<c:if test="${not empty myLecApplyList}">
   <c:set value="${myLecApplyList }" var="myList"></c:set>
</c:if>

<style>
.custom-font-dark {
   color : #0a3875;
   font-weight : bold;
}
</style>
<div class="container-fluid">

   <!-- 맨위 개인 정보 보여주는 구간 -->
   <div class="row mb-5" style="border: 1px solid black; padding: 10px; background-color: #d4e4f8;">
      <div class="col-md-3">
         <span class="col-3 custom-font-dark">소속</span> <input class="col-9" type="text"
            value="공과대학 컴퓨터공학과">
      </div>
      <div class="col-md-3">
         <span class="col-6 custom-font-dark">기준학점</span> <input class="col-6" type="text"
            value="18">
      </div>
      <div class="col-md-3">
         <span class="col-6 custom-font-dark">신청가능학점</span> <input class="col-6" type="text"
            value="18">
      </div>
      <div class="col-md-3">
         <span class="col-3 custom-font-dark">학년</span> <input class="col-9" type="text"
            value="2학년(4학기)">
      </div>
   </div>
   
   
   <!-- 검색 바 -->
   <div class="row" style="border: 1px solid black; padding: 10px; background-color: #d4e4f8;">
      <div class="row col-12 mb-3">
         <div class="col-md-4">
            <div class="row">
               <div class="col-4 align-center">
                  <span class="col-12 custom-font-dark">개설학과</span> 
               </div>
               <input type="text" class="column_filter col-6" id="col1_filter" data-column="1">
            </div>
         </div>
         <div class="col-md-4">
            <div class="row">
               <div class="col-4">
                  <span class="col-12 custom-font-dark">학년</span> 
               </div>
               <input type="text" class="column_filter col-6" id="col2_filter" data-column="2">
            </div>
         </div>
         <div class="col-md-4">
            <div class="row">
               <div class="col-4">
                  <span class="col-12 custom-font-dark">과목코드</span> 
               </div>
               <input type="text" class="column_filter col-6" id="col3_filter " data-column="3">
            </div>
         </div>
      </div>
      
      <div class="row col-12">
         <div class="col-md-4">
            <div class="row">
               <div class="col-4 align-center">
                  <span class="col-12 custom-font-dark">과목명</span> 
               </div>
               <input type="text" class="column_filter col-6" id="col4_filter" data-column="4">
            </div>
         </div>
         <div class="col-md-4">
            <div class="row">
               <div class="col-4">
                  <span class="col-12 custom-font-dark">개설이수구분</span> 
               </div>
               <select class="column_filter" id="col7_smart" data-column="7">
                  <option>선택</option>
                  <option value="전공/필수">전공/필수</option>
                  <option value="전공/선택">전공/선택</option>
                  <option value="교양/필수">교양/필수</option>
                  <option value="교양/선택">교양/선택</option>
               </select>
            </div>
         </div>
      </div>
   </div>


   <div class="row mb-5">
        <table id="example" class="table table-sm table-bordered table-hover display" style="cursor:pointer;">
           <thead>
              <tr onclick="event.stopPropagation()">
                  <th>장바구니</th>
                  <th>개설학과</th>
                  <th>학년</th>
                  <th>과목번호</th>
                  <th>과목명</th>
                  <th>정원</th>
                  <th>수강인원</th>
                  <th>개설이수구분</th>
                  <th>학점</th>
                  <th>담당교수</th>
                  <th>강의시간</th>
                  <th>강의계획서</th>
               </tr>
            </thead>
            <tbody id="tabledataBox">


            
            </tbody>
        </table>
      </div>

   <div class="row">
      <div class="col-7">
         <div class="card" style="height:500px">
            <div class="card-body" style="overflow:auto;">
               <div class="row">
                  <h4 class="card-title col-6">수강 신청 내역 </h4>
                  <h4 class="card-title offset-3 col-3">총 학점 : <span id="creditBox">0</span>/21</h4>
               </div>
                  <table border="1" style="width:100%" class="table text-center ">
                     <thead>
                        <tr>
                           <th>순번</th>
                           <th>과목명</th>
                           <th>학점</th>
                           <th>개설이수구분</th>
                           <th>뺴기</th>
                        </tr>
                     </thead>
                     <tbody id="myLecture" class="autoCount">

                     </tbody>
                  </table>
               
            </div>
         </div>
      </div>
      <div class="col-5">
         <div class="card">
            <div class="card-body">
               <h4 class="card-title">시간표</h4>
               
               <div class="container">
                  <table border="1" style="width:100%; height:410px;" class="text-center">
                       <thead>
                        <tr class="text-center">
                           <th colspan="1" style="width:50px;"></th>
                           <th>월</th>
                           <th>화</th>
                           <th>수</th>
                           <th>목</th>
                           <th>금</th>
                        </tr>
                       </thead>
                       <tbody id="timeTableList">
                        <c:forEach begin="0" end="9" step="1" varStatus="state">
                           <tr>
                              <th style="width:50px;"> ${9 + state.index}:00</th>
                              <th style="width:50px;"></th>
                              <th style="width:50px;"></th>
                              <th style="width:50px;"></th>
                              <th style="width:50px;"></th>
                              <th style="width:50px;"></th>
                           </tr>
                        </c:forEach>
                       </tbody>
                  </table>
               </div>
            </div>
         </div>
      </div>
   </div>
</div>


<script>
var countS;
var timeTable = Array.from({length:10}, () => Array(5).fill(0));



window.onload = function(){
   // 웹소켓
   connect();
   
   
   // 테이블 세팅
   var table = $("#example").DataTable({
      
      destroy : true,
      //표시 건수기능 숨기기
//      lengthChange: false,
//         // 검색 기능 숨기기
//         searching: false,
//         // 정렬 기능 숨기기
//         ordering: false,
//         // 정보 표시 숨기기
//         info: false,
//         // 페이징 기능 숨기기
         paging: false,
//          dom: '<"dt_title">fti<"dt_btn">',
//          "scrollY": true
           scrollY: "250px",
           "columns": [
               { "width": "7%" },   //장바구니
               { "width": "12%" },   //개설학과
               { "width": "5%" },   // 학년
               { "width": "8%" },  // 과목번호
               { "width": "10%" },  // 과목명
               { "width": "5%" },  // 정원
               { "width": "5%" },  // 수강인원
               { "width": "10%" },   // 개설이수구분
               { "width": "5%" },   // 학점
               { "width": "10%" },   // 담당교수
               { "width": "18%" },  // 강의시간
               { "width": "20%" }   // 강의계획서
           ]

   });   
//    table.columns.adjust().draw();
   
   init(table);
   
   keyEvent();

}

function keyEvent(){
   $('.column_filter').on('keyup change', function () {
       filterColumn($(this).attr('data-column'));
   });
}

function init(table){
   
   // 검색 커스텀
   $("div.dt_title").html('수강목록');
   
    // 검색바 삭제
   var example_filter = $("#example_filter");
    example_filter.html("");
  
   var header = $("meta[name='_csrf_header']").attr('content');
   var token = $("meta[name='_csrf']").attr('content');
   var tabledataBox = document.querySelector("#tabledataBox");
   
   $.ajax({
      url :"/prelecture/list",
      type: "get",
      beforeSend : function(xhr){
         xhr.setRequestHeader(header, token);
      },
      success: function(res){
      
    	 console.log(res)
    	  
         var myLecture = document.querySelector("#myLecture");   
         var headerData = $("#headerData");
        
         let startTime = performance.now();

         // 수강바구니 목록
         res[1].forEach((data, i)=>{
            myLecList(data, table);
         }) // 수강바구니 목록 끝
         
         
         // 강의 목록
         res[0].forEach((data, i)=>{
            lecList(data, table);
         }) // 강의목록 끝
         
         
         // 수강바구니
         console.log(res[1])
         res[1].forEach((data, i) => {
            if(data.LA_STATE == 1){
               addBlock(data);
            }
            
         })//수강바구니
         
         // 시간표
         res[1].forEach((data, i)=>{
            if(data.LA_STATE == 1){
                timeTableInsert(data);
            }
         })
         
         let endTime = performance.now(); 
         
         console.log(endTime - startTime)
      }
   })
}

// 검색 필터
function filterColumn(i) {
   
   var data = $('#col' + i + '_filter').val();
   if(i == 7){
      data = $('#col' + i + '_smart').val();
      if(data == "선택") data = "" ;
   }

    $('#example')
        .DataTable()
        .column(i)
        .search(
            data
        )
        .draw();
}

function showPlan(data){
   
   var popWidth = 920;
   var popHeight = 600;

   var popupX = (window.screen.width / 2) - (popWidth / 2);
   var popupY= (window.screen.height / 2) - (popHeight / 2);
   
   var pop = window.open("","content",
   "menubar=no, width="+popWidth+", height="+popHeight+" left="+popupX+" top="+popupY+"");
   
   // window.open post로 보내기(form 태그를 보내면 됩니당)
   var result = data.parentNode;
   result.action = "/prelecture/showPlan";
   result.method = "post";
   result.target = "content";
   
   result.submit();
}

function lecList(data, table){
   
    var text = "";
    text += '<form id="dataForm" onclick="event.stopPropagation()">';
    text += '<input type="button" class="btn btn-primary btn-sm" value="강의계획서" onclick="showPlan(this)">';
    text += '<input type="hidden" value="'+data.LOL_CODE+'" name="lol_code">';
    text += '<input type="hidden" value="'+data.MEM_NO+'" name="mem_no">';
    text += '<input type="hidden" value="'+data.LOL_NAME+'" name="lol_name">';
    text += '<sec:csrfInput/>';
    text += '</form>';
    
    table.row.add([
       '<td><input type="button" class="btn btn-primary btn-sm" onclick="lectureData(this)" value="추가">'
       +'<input type="hidden" value="'+data.LEC_CODE+'" name="lec_code">'
       +'</td>',
       '<td>'+data.DEP_NAME+'</td>',
       '<td>'+data.LOL_SCHYEAR+'</td>',
       '<td>'+data.LOL_CODE+'</td>',
       '<td>'+data.LOL_NAME+'</td>',
       '<td>'+data.LOL_LIMIT+'</td>',
       '<td>0</td>',
       '<td>'+data.MAJOR_CULTURAL+'/'+data.CHOICE_REQUIRE+'</td>',
       '<td>'+data.LOL_CREDIT+'</td>',
       '<td>'+data.MEM_NAME+'</td>',                                                    
       '<td>'+data.LOL_DAY1+':'+data.LOL_STARTIME1+'~'+data.LOL_ENDTIME1+'/'
       +data.LOL_DAY2+':'+data.LOL_STARTIME2+'~'+data.LOL_ENDTIME2+'</td>',                                                                           
       text                                                                           
       ]).draw(false);
}

function myLecList(data, table){
   
   if(data.LA_STATE == 1) {
       return;
    }
    
    var text = "";
    text += '<form id="dataForm" onclick="event.stopPropagation()">';
    text += ' <input type="button" class="bnt btn-primary" value="강의계획서" onclick="showPlan(this)">';
    text += ' <input type="hidden" value="'+data.LOL_CODE+'" name="lol_code">';
    text += ' <input type="hidden" value="'+data.MEM_NO+'" name="mem_no">';
    text += ' <input type="hidden" value="'+data.LOL_NAME+'" name="lol_name">';
    text += ' <sec:csrfInput/>';
    text += '</form>';
    
    table.row.add([
       '<td><input type="button" onclick="lectureData(this)" value="확정" class="btn btn-success btn-sm">'
       +'<input type="hidden" value="'+data.LA_CODE+'" name="la_code">'
       +'</td>',
       '<td>'+data.DEP_NAME+'</td>',
       '<td>'+data.LOL_SCHYEAR+'</td>',
       '<td>'+data.LOL_CODE+'</td>',
       '<td>'+data.LOL_NAME+'</td>',
       '<td>'+data.LOL_LIMIT+'</td>',
       '<td>0</td>',
       '<td>'+data.MAJOR_CULTURAL+'/'+data.CHOICE_REQUIRE+'</td>',
       '<td>'+data.LOL_CREDIT+'</td>',
       '<td>'+data.MEM_NAME+'</td>',                                                    
       '<td>'+data.LOL_DAY1+':'+data.LOL_STARTIME1+'~'+data.LOL_ENDTIME1+'/'
       +data.LOL_DAY2+':'+data.LOL_STARTIME2+'~'+data.LOL_ENDTIME2+'</td>',                                                                          
       text                                                                           
       ]).draw(false);
}

// 수강바구니 데이터 추가 일단 대충 만듬
function lectureData(data){
   event.preventDefault();
   
   var header = $("meta[name='_csrf_header']").attr('content');
   var token = $("meta[name='_csrf']").attr('content');
   var myLecture = document.querySelector("#myLecture");
   
   if(!confirm("추가하시겠습니까?")){
      return;
   }
   
   // 학점이 초과하는지 체크
   if(creaditCheck(data)){
      alert("수강가능한 학점을 초과하셨습니다.")
      return;
   }
   
   // 시간이 겹치는지 체크
   if(checkTime(data)){
      alert("시간표가 겹칩니다...")
      return;
   }
   
   // 학번, 강의코드
   // 그냥 수강신청하려면 수강바구니 코드가필요하네.. 씁;;
   
   var code = "";
   var addUrl = "";
   if(data.value == "확정"){
      code = data.parentNode.children[1].value;
      addUrl = "laCode";
   }else if(data.value="추가"){
      code = data.parentNode.children[1].value;
      addUrl = "lecCode"
   }
   
   // 인서트 이후 수강인원 카운트 해줘야함
   var promise = () => new Promise((resolve, reject) => {
      $.ajax({
         url:"/lecture/insertLec/"+addUrl,
         data:{"code" : code},
         type:"post",
         beforeSend : function(xhr){
            xhr.setRequestHeader(header, token);
         },
         success:function(res){
          
          if(data.value == "확정"){
             data.parentNode.parentNode.remove();
          }  
            
          countS = data.parentElement.parentElement.children[6];
          countS.innerText = countS.innerText*(1) + 1;
          
          var lecCode = data.parentElement.parentElement.children[0].children[1].value;
          
          addBlock(res);
          timeTableInsert(res);
          
          console.log("promise진행중")
          
          // 소켓 테스트
          var jsonObject = {
             "state" : "2",
             "userId" : "${userId}",
             "lecCode" : lecCode
          }
          sendMessage(JSON.stringify(jsonObject));
          
          resolve(res);
          
         },
         error : function(xhr){
            alert("이미 추가한 강의입니다.");
            reject("등록에 실패하셨네여...");
         }
      })
   })
   
   promise().then((data)=>{
      
      console.log("promise 다음단계")
      
       var header = $("meta[name='_csrf_header']").attr('content');
       var token = $("meta[name='_csrf']").attr('content');
      
      console.log(data);
      var jsonArray = [];
      jsonArray.push(data.lecOpenList)
      jsonArray.push(data.lecture)
      
      console.log(jsonArray)
      console.log(JSON.stringify(data));
      $.ajax({
         url:"/lecture/insertTimeTable",
         data:JSON.stringify(jsonArray),
          beforeSend : function(xhr){
             xhr.setRequestHeader(header, token);
          },
         type:"post",
         contentType:"application/json;charset=utf-8",
         success:function(res){
            alert("시간표 등록 성공요...");
         },
         error:function(){
            alert("시간표 등록 실패....")
         }
      })
   })
}


function creaditCheck(data){
   
   var credit = data.parentNode.parentNode.children[8].innerText*1;
   var creditBox = document.querySelector("#creditBox").innerText*1;
   
   if(credit + creditBox > 21){
      return true;
   }
   
   return false;
}

function addBlock(res){
   
	console.log(res)
	
   var myLecture = document.querySelector("#myLecture");
   
   var lolName = res.LOL_NAME;
   var lolCredit = res.LOL_CREDIT;
   var majorChoice = res.MAJOR_CULTURAL+"/"+res.CHOICE_REQUIRE;
   
   // 총 학점 계산
   creditCalculator(res,1);
   
   text = ""
   text += "<tr data-code='"+res.LOL_CODE+"'>";
   text += "<td></td>";
   text += "<td>"+lolName+"</td>";
   text += "<td>"+lolCredit+"</td>";
   text += "<td>"+majorChoice+"</td>";
   text += "<td>";
   text += "<input type='hidden' value='"+res.LA_CODE+"' name='la_code'>";
   text += "<input class='btn btn-primary' type='button' value='취소' onclick='blockDelete(this)''>";
   text += "</td>";
   text += "</tr>";
   
   myLecture.innerHTML += text;
   
   tableCount();
}

function creditCalculator(res,data){
   
	console.log(res)
	
   var sign = 0;
   if(data == 0) sign = -1;
   if(data == 1) sign = 1; 
   
   var creditBox = document.querySelector("#creditBox");
   var credit = creditBox.innerText*1;
   
   credit = credit + res.lol_credit*(1)*(sign);
   creditBox.innerText = credit;
}

function blockDelete(data){
   
   if(!confirm("수강을 취소하시겠습니까?")){
      return;
   }
   
   var laCode = data.parentNode.children[0].value;
   var header = $("meta[name='_csrf_header']").attr('content');
   var token = $("meta[name='_csrf']").attr('content');
   
   console.log(data)
   // 임시로 막기
//    if(true){
//       return;
//    }
   
   $.ajax({
      url:"/prelecture/deletetLec/"+1,
      data:{"la_code" : laCode},
      type:"post",
      beforeSend : function(xhr){
         xhr.setRequestHeader(header, token);
      },
      success:function(res){
         
        var deleteTag = data.parentNode.parentNode;
        deleteTag.remove();
         // 수강인원 카운트 해줘야함...
//        var countS = data.parentElement.parentElement.children[6];
//        countS.innerText = countS.innerText*(1) + 1; 
                    
         tableCount();
         creditCalculator(res, 0);
         timeTableDelete(res);
      },
   })
}

function timeTableInsert(data) {
   
    var timeTableList = document.querySelector("#timeTableList");
    var dayArray = ["월", "화", "수", "목", "금"];
    var timeArray = ['9','10','11','12','13','14','15','16','17','18'];

    var color = getRandomColor();
    if(data.LOL_DAY1 != null){
          var dayPosition = dayArray.indexOf(data.LOL_DAY1) + 1;
          var timeStart = timeArray.indexOf(data.LOL_STARTIME1);
          var timeEnd = timeArray.indexOf(data.LOL_ENDTIME1);
          
          for(let i=timeStart; i<=timeEnd; i++){
            timeTableList.children[i].children[dayPosition].innerText = data.LOL_NAME;
            timeTableList.children[i].children[dayPosition].style.backgroundColor = color;
            timeTable[i][dayPosition-1] = 1;
          }
    }
    
    color = getRandomColor();
    if(data.LOL_DAY2 != null){
          var dayPosition = dayArray.indexOf(data.LOL_DAY2) + 1;
          var timeStart = timeArray.indexOf(data.LOL_STARTIME2);
          var timeEnd = timeArray.indexOf(data.LOL_ENDTIME2);
          
          for(let i=timeStart; i<=timeEnd; i++){
            timeTableList.children[i].children[dayPosition].innerText = data.LOL_NAME;
            timeTableList.children[i].children[dayPosition].style.backgroundColor = color;
            timeTable[i][dayPosition-1] = 1;
          }
    }
}

function timeTableDelete(res){
   
    var timeTableList = document.querySelector("#timeTableList");
    var dayArray = ["월", "화", "수", "목", "금"];
    var timeArray = ['9','10','11','12','13','14','15','16','17','18'];
    
    if(res.lol_day1 != null){
          var dayPosition = dayArray.indexOf(res.lol_day1) + 1;
          var timeStart = timeArray.indexOf(res.lol_startime1);
          var timeEnd = timeArray.indexOf(res.lol_endtime1);
          
          for(let i=timeStart; i<=timeEnd; i++){
            timeTableList.children[i].children[dayPosition].innerText = "";
            timeTableList.children[i].children[dayPosition].style.backgroundColor = "";
             timeTable[i][dayPosition-1] = 0;
          }
    }
    
    if(res.lol_day2 != null){
          var dayPosition = dayArray.indexOf(res.lol_day2) + 1;
          var timeStart = timeArray.indexOf(res.lol_startime2);
          var timeEnd = timeArray.indexOf(res.lol_endtime2);
          
          for(let i=timeStart; i<=timeEnd; i++){
            timeTableList.children[i].children[dayPosition].innerText = "";
            timeTableList.children[i].children[dayPosition].style.backgroundColor = "";
             timeTable[i][dayPosition-1] = 0;
          }
    }
    
}

function tableCount(){
   
   var autoCount = document.querySelector(".autoCount");
   var count = autoCount.children.length;
   
   for(let i=0;i<count;i++ ){
      autoCount.children[i].children[0].innerText = (i+1); 
   }
}

function getRandomColor() {
   return "#" + Math.floor(Math.random() * 16777215).toString(16);
}

function checkTime(data){
   
   var dataTime = data.parentElement.parentElement.children[10].innerText;
   var allTime = dataTime.split("/");
   
   var firstTime = allTime[0].split(":")[1].split("~");
   var firstDay = allTime[0].split(":")[0];
      
   var secondTime = allTime[1].split(":")[1].split("~");
   var secondDay = allTime[1].split(":")[0];
   
   var dayArray = ['월','화','수','목','금'];
   var timeArray = ['9','10','11','12','13','14','15','16','17','18'];
   
   var dayPosition = dayArray.indexOf(firstDay);
   var timeStart = timeArray.indexOf(firstTime[0]);
   var timeEnd = timeArray.indexOf(firstTime[1]);
   
   if(timeTable[timeStart][dayPosition] == 1 || timeTable[timeEnd][dayPosition]){
      return true;
   }
   
   dayPosition = dayArray.indexOf(secondDay);
   timeStart = timeArray.indexOf(secondTime[0]);
   timeEnd = timeArray.indexOf(secondTime[1]);
   
   if(timeTable[timeStart][dayPosition] == 1 || timeTable[timeEnd][dayPosition]){
      return true;
   }
   
   return false;
}

///////// 실시간 수강신청
//웹소켓
let websocket;

window.addEventListener("unload", function(){
	offClose();
})

//입장 버튼을 눌렀을 때 호출되는 함수
function connect() {
    // 웹소켓 주소
    var wsUri = "ws://${pageContext.request.serverName}:${pageContext.request.serverPort}${pageContext.request.contextPath}/websocket/echo.do";
    // 소켓 객체 생성
    websocket = new WebSocket(wsUri);
    //웹 소켓에 이벤트가 발생했을 때 호출될 함수 등록
    websocket.onopen = onOpen;
    websocket.onmessage = onMessage;
}


//웹 소켓에 연결되었을 때 호출될 함수
function offClose(){
	
   var jsonObject = {
         "state" : "1",
         "userId" : "${userId}",
         "msg" : "byebye"
   };
	
	websocket.send(JSON.stringify(jsonObject))
}

function onOpen() {
   
   var jsonObject = {
         "state" : "0",
         "userId" : "${userId}",
         "msg" : "hihi~"
   }
   
   websocket.send(JSON.stringify(jsonObject));
}

// * 1 메시지 전송
function sendMessage(message){
   websocket.send(message)
}

// * 2 메세지 수신
function onMessage(evt) {
   var data = JSON.parse(evt.data);
   
   if(data.state == "0"){
	   console.log(data.userId + "접속하셨습니다.")
	   console.log(data.msg)
	   return;
   }
   
   if(data.state == "1"){
	   console.log(data.userId + "떠났습니다...")
	   console.log(data.msg)
	   return;
   }
   
   if(data.state == "2"){
	   var tmpTag;
	   var tmplecCode = document.querySelectorAll("input[name=lec_code]");
	   
	   tmplecCode.forEach((value,i)=>{
		   console.log(value.getAttribute("value") == data.lecCode)
		   
		  	if(value.getAttribute("value") == data.lecCode){
		  		tmpTag = value;
		  		return;
		  	}
	   })
	   
	   tmpTag.parentElement.parentElement.children[6].innerText = tmpTag.parentElement.parentElement.children[6].innerText*(1) + 1;
   }
   
}





</script>