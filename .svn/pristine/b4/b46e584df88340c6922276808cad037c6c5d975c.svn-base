package org.hdcd.service.common.notice;

import java.io.File;
import java.util.List;
import java.util.UUID;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;

import org.hdcd.mapper.NoticeMapper;
import org.hdcd.vo.NoticeFileVO;
import org.hdcd.vo.NoticeVO;
import org.hdcd.vo.VolunteerFileVO;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import android.util.Log;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class NoticeServiceImpl implements NoticeService {

	@Autowired
	private NoticeMapper mapper;
	
	@Override
	public List<NoticeVO> selectAllList() throws Exception {
		return mapper.selectAllList();
	}

	@Override
	public int insertNotice(NoticeVO noticeVo, List<MultipartFile> n_file, HttpServletRequest req)
			throws Exception {
	System.out.println("?????1");
		
		ServletContext servletContext = req.getSession().getServletContext();
		String realpath = servletContext.getRealPath("resources/uploads");
		
		UUID uuid = UUID.randomUUID();
		
		NoticeFileVO fileVO = new NoticeFileVO();
		
		int res = mapper.insertNotice(noticeVo);
		
		System.out.println("?????2");
		
		
		for (int i = 0; i < n_file.size(); i++) {
			System.out.println("?????3");
			
			String saveFName = uuid + "_" + n_file.get(i).getOriginalFilename();
			String filePath = servletContext.getContextPath() + "/resources/uploads/" + saveFName;
			
			fileVO.setFile_size(n_file.get(i).getSize());
			fileVO.setFile_originnm(n_file.get(i).getOriginalFilename());
			fileVO.setFile_name(saveFName);
			fileVO.setFile_path(filePath);
			fileVO.setNotice_no(noticeVo.getNotice_no());
			fileVO.setFile_type(n_file.get(i).getContentType());
			
			System.out.println("?????4");
			int cnt = mapper.insertFiles(fileVO);
			System.out.println("?????5");
			
			n_file.get(i).transferTo(new File(realpath + "/" + n_file.get(i).getOriginalFilename()));
			
			System.out.println("?????6");
			
		}
		return 0;
	}

	@Override
	public void deleteNotice(String noticeNo) throws Exception {
		mapper.deleteNotice(noticeNo);
		mapper.deleteFile(noticeNo);
	}

	@Override
	public String modeifyNotice(String noticeNo) throws Exception {
		return mapper.modeifyNotice(noticeNo);
	}
}
